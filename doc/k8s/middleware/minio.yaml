---
apiVersion: v1
kind: Service
metadata:
  name: minio-node
  namespace: feng
  labels:
    app: minio
spec:
  selector:
    app: minio
  type: NodePort
  ports:
    - name: http-node
      protocol: TCP
      port: 9000
      targetPort: 9000
      nodePort: 30900
    - name: console-node
      protocol: TCP
      port: 9001
      targetPort: 9001
      nodePort: 30901
---
#内部无头服务
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: feng
  labels:
    app: minio
spec:
  selector:
    app: minio
  clusterIP: None
  ports:
    - name: http
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: console
      protocol: TCP
      port: 9001
      targetPort: 9001
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: feng
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  revisionHistoryLimit: 5
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: minio
          image: quay.io/minio/minio:RELEASE.2022-03-24T00-43-44Z
          imagePullPolicy: IfNotPresent
          ports:
            - name: minio
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
              protocol: TCP
          args:
            - server
            # 要么一个就是disk不要带数字，否则至少4个
            - "/disk{1...4}"
            - --console-address
            - ":9001"
          resources:
            limits:
              memory: 512Mi
              cpu: 500m
          env:
            - name: MINIO_ROOT_USER
              value: feng
            - name: MINIO_ROOT_PASSWORD
              value: F6yXaV4ZbuIPACgprUQ38jEw9nKhWNJo
          volumeMounts:
            - name: disk1
              mountPath: /disk1
            - name: disk2
              mountPath: /disk2
            - name: disk3
              mountPath: /disk3
            - name: disk4
              mountPath: /disk4
            - name: datetime
              mountPath: /etc/localtime
              readOnly: true
      volumes:
        - name: datetime
          hostPath:
            path: /etc/localtime

  volumeClaimTemplates:
    - metadata:
        name: disk1
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: nfs-storage
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: disk2
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: nfs-storage
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: disk3
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: nfs-storage
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: disk4
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: nfs-storage
        resources:
          requests:
            storage: 1Gi
