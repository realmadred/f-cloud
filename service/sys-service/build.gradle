import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

dependencies {
    implementation(project(':common:common-cache'))
    implementation(project(':common:common-db'))
    implementation 'org.mapstruct:mapstruct'
    implementation "org.apache.commons:commons-lang3"
    implementation "com.lmax:disruptor"
    implementation "mysql:mysql-connector-java"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    // 解决bootstrap 配置无法读取问题
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'io.jsonwebtoken:jjwt'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-okhttp'
    implementation 'org.springframework.cloud:spring-cloud-loadbalancer'
    // 负载均衡缓存 Caffeine
    implementation 'org.springframework:spring-context-support'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'
    implementation 'com.alibaba.csp:sentinel-datasource-nacos'
}

apply plugin: "com.google.cloud.tools.jib"

jib {
    from {
        image = "openjdk@sha256:39818a12ae215ab9f9463b312696696b941b59598913041f575582e67bbb917d"
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
        }
    }

    to {
        image = "registry.cn-hangzhou.aliyuncs.com/f-boot/${project.name}"
        tags = ["${rootProject.version}"]
    }

    container {
        ports = ["18080"]
        creationTime = ZonedDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME)
    }
}
