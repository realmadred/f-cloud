buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://repo.huaweicloud.com/repository/maven/'
        }
    }
    dependencies {
        classpath('com.google.cloud.tools:jib-layer-filter-extension-gradle:0.1.0')
    }
}

plugins {
    id 'java'
    id 'java-library' // api implementation
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.6.6' apply false
    id 'com.google.cloud.tools.jib' version '3.2.0' apply false
}

ext {
    set('springCloudAlibabaVersion', "2021.0.1.0")
    set('springCloudVersion', "2021.0.1")
    set('log4j2Version', "2.17.1")
}

allprojects {
    apply plugin: 'java-library'

    group 'com.f'
    version '1.0.0'

    // 设置编译和运行的jre兼容版本
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenLocal()
        maven {
            url 'https://repo.huaweicloud.com/repository/maven/'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

// 应用于所有依赖的子项目
subprojects {
    // 应用插件
    apply plugin: 'java'
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        // 导入maven依赖管理的bom
        imports {
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
        dependencies {
            dependencySet(group: 'io.jsonwebtoken', version: '0.9.1') {
                entry 'jjwt'
            }
            dependencySet(group: 'org.apache.commons', version: '3.12.0') {
                entry 'commons-lang3'
            }
            dependencySet(group: 'org.mapstruct', version: '1.4.2.Final') {
                entry 'mapstruct'
                entry 'mapstruct-processor'
            }
            dependencySet(group: 'com.baomidou', version: '3.4.3.4') {
                entry 'mybatis-plus-extension'
                entry 'mybatis-plus-boot-starter'
                entry 'mybatis-plus-boot-starter'
            }
            dependencySet(group: 'com.alicp.jetcache', version: '2.6.2') {
                entry 'jetcache-starter-redis-lettuce'
            }
            dependencySet(group: 'com.lmax', version: '3.4.4') {
                entry 'disruptor'
            }
            dependencySet(group: 'com.google.guava', version: '30.1-jre') {
                entry 'guava'
            }
            dependencySet(group: 'commons-io', version: '2.11.0') {
                entry 'commons-io'
            }
            dependencySet(group: 'com.alibaba', version: '1.2.78') {
                entry 'fastjson'
            }
            dependencySet(group: 'com.github.shalousun', version: '2.2.9') {
                entry 'smart-doc-maven-plugin'
            }
            dependencySet(group: 'io.minio', version: '8.3.6') {
                entry 'minio'
            }
            dependencySet(group: 'com.squareup.okhttp3', version: '4.9.3') {
                entry 'okhttp'
            }
            dependencySet(group: 'com.github.wechatpay-apiv3', version: '0.4.4') {
                entry 'wechatpay-apache-httpclient'
            }
            dependencySet(group: 'com.alipay.sdk', version: '2.2.1') {
                entry 'alipay-easysdk'
            }
            dependencySet(group: 'de.javakaffee', version: '0.45') {
                entry 'kryo-serializers'
            }
            dependencySet(group: 'com.esotericsoftware.kryo', version: '2.24.0') {
                entry 'kryo'
            }
            dependencySet(group: 'com.esotericsoftware', version: '4.0.2') {
                entry 'kryo'
            }
            dependencySet(group: 'org.apache.logging.log4j', version: "${log4j2Version}") {
                entry 'log4j-api'
                entry 'log4j-core'
                entry 'log4j-jul'
                entry 'log4j-to-slf4j'
                entry 'log4j-slf4j-impl'
            }
        }
    }

    /**
     * 为所有模块指定公共的依赖
     * 注意这里有些默认不用再指定版本了，已经由上面的dependencyManagement管理了
     */
    dependencies {
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        annotationProcessor "org.projectlombok:lombok"
        compileOnly "org.springframework.boot:spring-boot-configuration-processor"
        compileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"
        testCompileOnly "org.projectlombok:lombok"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    configurations.all {
        exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-websocket'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude module: 'logback-classic'
        exclude module: 'logback-core'
    }

    test {
        useJUnitPlatform()
    }

}

